import java.math.BigInteger;
import java.util.Random;
import java.util.Scanner;

class Alise {

	BigInteger n;
	
	BigInteger e;
	BigInteger d;
	
	
	public void training () {
		Random rnd = new Random();
        int bitLength = 100;
        BigInteger p1 = BigInteger.probablePrime(bitLength, rnd);
        BigInteger p2 = BigInteger.probablePrime(bitLength, rnd);
        
        n=p1.multiply(p2);
        
        
        BigInteger fi;
        fi=p1.subtract(BigInteger.valueOf(1)).multiply(p2.subtract(BigInteger.valueOf(1)));
        
         e = BigInteger.valueOf(2);
        while((e.compareTo(fi) < 0)&!e.gcd(fi).equals(BigInteger.valueOf(1))) {
        	e = e.add(BigInteger.ONE);
        	 }
        d = e.modInverse(fi);
        System.out.println("p1= "+p1+"\np2 ="+p2+"\nn= "+n+"\ne= "+e+"\nd= "+d);
	}
	public BigInteger[] encript () {
		Scanner scanner = new Scanner(System.in);
		
		System.out.print("Введите пароль: ");
		String pasword = scanner.nextLine();
		char[] letters = pasword.toCharArray();
		BigInteger[] c = new BigInteger[letters.length];
		for (int i=0;i<letters.length;i++)
		 c[i] =BigInteger.valueOf(letters[i]).modPow(e, n);
		 
	//	 System.out.println(c);
		 
		
		return c; 
	}
	public void decript (BigInteger[] c) {
		for (int i=0;i<c.length;i++)
			System.out.println(c[i]);
		for (int i=0;i<c.length;i++)
		 System.out.print( (char)(c[i].modPow(d, n).intValue()));
	}
	
	
}

public class Main {
	
	 public static void main (String args[]) {
		 Alise alise = new Alise ();
		 alise.training();
		 alise.decript(alise.encript());
	 }
